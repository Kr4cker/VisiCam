#!/bin/bash
### BEGIN INIT INFO
# Provides:          visicam
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start/stop visicam
# Description:       A Java application, that turns a webcam into a VisiCut compatible network camera with marker detection and perspective correction.
#            Uses OpenCV through JavaCV
### END INIT INFO

#    This file is part of VisiCam. (https://github.com/t-oster/VisiCam)
#
#    VisiCam is free software: you can redistribute it and/or modify
#    it under the terms of the GNU Lesser General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    VisiCam is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU Lesser General Public License
#    along with VisiCam.  If not, see <http://www.gnu.org/licenses/>.

# This file is based on the init-script for debian, which was created by Julian Neureuther <julian@neureuther.eu>

# Template variables that will be automatically filled in by setup_service_raspbian.sh script
VISICAM_JAR=TEMPLATE-LOCAL-JAR-PATH
VISICAM_ROOT=TEMPLATE-ABSOLUTE-ROOT-PATH
PORT=TEMPLATE-PORT
DAEMONUSER=TEMPLATE-USER
DAEMONGROUP=TEMPLATE-GROUP

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="camera for visicut"
NAME=visicam
DAEMON=/usr/bin/java
DAEMON_ARGS="-jar $VISICAM_JAR --nogui --port $PORT"
LOGFILE=/var/log/$NAME.log
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed / symlink not set
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

#
# Function that starts the daemon/service
#
do_start()
{
    # Return
    #   0 if daemon has been started
    #   1 if daemon was already running //TODO
    #   2 if daemon could not be started

    #check if all files + dirs exist
    if [ ! -e $LOGFILE ]; then
        touch $LOGFILE || return 2
        chown $DAEMONUSER:$DAEMONGROUP $LOGFILE || return 2
    elif [ ! -e $PIDFILE ]; then
        touch $PIDFILE || return 2
        #chown $DAEMONUSER:$DAEMONGROUP $PIDFILE || return 2
    fi

    # Check if process is already running
    if [ -e $PIDFILE ]
    then
        # Read pid from file
        read PID < $PIDFILE

        # Check if PID is not empty and process with PID is running by looking up /proc/ dir
        if [ ! -z "$PID" ] && [ -d /proc/$PID ]
        then
            # Process is already running, return 1
            return 1
        fi
    fi

    start-stop-daemon --start --quiet --chuid $DAEMONUSER --make-pid --pidfile $PIDFILE --background --startas /bin/bash -- -c "cd $VISICAM_ROOT && exec $DAEMON $DAEMON_ARGS > /var/log/visicam.log 2>&1" \
        || return 2
}

#
# Function that stops the daemon/service
#
do_stop()
{
    # Return
    #   0 if daemon has been stopped
    #   1 if daemon was already stopped
    #   2 if daemon could not be stopped
    #   other if a failure occurred
    start-stop-daemon --stop --quiet --oknodo --retry=TERM/30/KILL/5 --pidfile $PIDFILE
    RETVAL="$?"
    [ "$RETVAL" = 2 ] && return 2

    rm -f $PIDFILE
    return "$RETVAL"
}

case "$1" in
  start)
    log_daemon_msg "Starting $DESC" "$NAME"
    do_start
    case "$?" in
        0|1) log_end_msg 0 ;;
        2) log_end_msg 1 ;;
    esac
    ;;
  stop)
    log_daemon_msg "Stopping $DESC" "$NAME"
    do_stop
    case "$?" in
        0|1) log_end_msg 0 ;;
        2) log_end_msg 1 ;;
    esac
    ;;
  status)
    status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
    ;;
  restart|force-reload)
    #
    # If the "reload" option is implemented then remove the
    # 'force-reload' alias
    #
    log_daemon_msg "Restarting $DESC" "$NAME"
    do_stop
    case "$?" in
      0|1)
        do_start
        case "$?" in
            0) log_end_msg 0 ;;
            1) log_end_msg 1 ;; # Old process is still running
            *) log_end_msg 1 ;; # Failed to start
        esac
        ;;
      *)
        # Failed to stop
        log_end_msg 1
        ;;
    esac
    ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
    exit 3
    ;;
esac

:

